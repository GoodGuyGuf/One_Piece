#onepiece_bio = page.css(".mw-content-ltr p")[0].text - iteration with name and bio all at once 
        #onepiece_bio.chomp("\n").delete"\""
        #c = Characters.new every iteration creates new character, assign bio same time
    

    #def fruit_types_list
     #   url = open(self.fruits_page)
      #  page = Nokogiri::HTML(url)
       # logia_fruit = page.css("p.italic.bolder")[1].text.chomp(" -")
        #paramecia_fruit = page.css("p.italic.bolder")[13].text.chomp("-")
        #zoan_fruit = ("p.italic.bolder")[19].text.chomp.(" -")
    #end #Done - I might need this method if for some reason I need to connect the scraped bits to devilfruit instances

     #here is a reference for choosing a character or fruit from the music CLI
#def play_song
#puts "Which song number would you like to play?"
#alphabet_songs = Song.all.sort{ |a, b| a.name <=> b.name }.uniq
#input = gets.strip.to_i
#if (1..Song.all.uniq.length).include?(input)
 # song = alphabet_songs[input - 1]
  #puts "Playing #{song.name} by #{song.artist.name}"
#end
#end

                        #here is a reference from the student scraper CLI
#def display_students
 #   Student.all.each do |student|
  #    puts "#{student.name.upcase}".colorize(:blue)
   #   puts "  location:".colorize(:light_blue) + " #{student.location}"
    #  puts "  profile quote:".colorize(:light_blue) + " #{student.profile_quote}"
     # puts "  bio:".colorize(:light_blue) + " #{student.bio}"
      #puts "  twitter:".colorize(:light_blue) + " #{student.twitter}"
      #puts "  linkedin:".colorize(:light_blue) + " #{student.linkedin}"
      #puts "  github:".colorize(:light_blue) + " #{student.github}"
      #puts "  blog:".colorize(:light_blue) + " #{student.blog}"
      #puts "----------------------".colorize(:green)
    #end
  #end
#binding.pry
